plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.6'
	id 'io.spring.dependency-management' version '1.1.6'
	id "org.sonarqube" version "6.0.0.5145"
}

group = 'fontys.sem6.circline.postservice'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'com.h2database:h2'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:3.4.0'
	testImplementation 'org.springframework.security:spring-security-test:6.3.5'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.xmlunit:xmlunit-core:2.10.0'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
}
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.3"
	}
}
sonar {
	properties {
		property "sonar.projectKey", "Sallyphaann_PostService"
		property "sonar.organization", "sallyphaann"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
